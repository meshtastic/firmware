{
    "files.associations": {
        "type_traits": "cpp",
        "array": "cpp",
        "*.tcc": "cpp",
        "cctype": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "unordered_map": "cpp",
        "unordered_set": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "fstream": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "iosfwd": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "memory": "cpp",
        "new": "cpp",
        "ostream": "cpp",
        "numeric": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "cinttypes": "cpp",
        "utility": "cpp",
        "typeinfo": "cpp",
        "string": "cpp",
        "*.xbm": "cpp",
        "list": "cpp",
        "atomic": "cpp",
        "memory_resource": "cpp",
        "optional": "cpp",
        "string_view": "cpp",
        "cassert": "cpp",
        "iterator": "cpp",
        "shared_mutex": "cpp",
        "iostream": "cpp",
        "esp_nimble_hci.h": "c"
    },
    "cSpell.words": [
        "Blox",
        "EINK",
        "HFSR",
        "Meshtastic",
        "NEMAGPS",
        "NMEAGPS",
        "RDEF",
        "Ublox",
        "bkpt",
        "cfsr",
        "descs",
        "ocrypto",
        "protobufs",
        "wifi"
    ],
    "C_Cpp.dimInactiveRegions": true,
    "cmake.configureOnOpen": true,
    "protoc": {
        "compile_on_save": false,
        "compile_all_path": "/home/kevinh/development/meshtastic/meshtastic-esp32/proto",
        "options": [
            "--java_out=/tmp",
            "-I=/home/kevinh/development/meshtastic/meshtastic-esp32/proto"
        ]
    }
}