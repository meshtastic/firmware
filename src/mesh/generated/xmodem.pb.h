/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_XMODEM_PB_H_INCLUDED
#define PB_XMODEM_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _XModem_Control {
    XModem_Control_NUL = 0,
    XModem_Control_SOH = 1,
    XModem_Control_STX = 2,
    XModem_Control_EOT = 4,
    XModem_Control_ACK = 6,
    XModem_Control_NAK = 21,
    XModem_Control_CAN = 24,
    XModem_Control_CTRLZ = 26
} XModem_Control;

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(128) XModem_buffer_t;
typedef struct _XModem {
    XModem_Control control;
    uint16_t seq;
    uint16_t crc16;
    XModem_buffer_t buffer;
} XModem;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _XModem_Control_MIN XModem_Control_NUL
#define _XModem_Control_MAX XModem_Control_CTRLZ
#define _XModem_Control_ARRAYSIZE ((XModem_Control)(XModem_Control_CTRLZ+1))

#define XModem_control_ENUMTYPE XModem_Control


/* Initializer values for message structs */
#define XModem_init_default                      {_XModem_Control_MIN, 0, 0, {0, {0}}}
#define XModem_init_zero                         {_XModem_Control_MIN, 0, 0, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define XModem_control_tag                       1
#define XModem_seq_tag                           2
#define XModem_crc16_tag                         3
#define XModem_buffer_tag                        4

/* Struct field encoding specification for nanopb */
#define XModem_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    control,           1) \
X(a, STATIC,   SINGULAR, UINT32,   seq,               2) \
X(a, STATIC,   SINGULAR, UINT32,   crc16,             3) \
X(a, STATIC,   SINGULAR, BYTES,    buffer,            4)
#define XModem_CALLBACK NULL
#define XModem_DEFAULT NULL

extern const pb_msgdesc_t XModem_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define XModem_fields &XModem_msg

/* Maximum encoded size of messages (where known) */
#define XModem_size                              141

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
