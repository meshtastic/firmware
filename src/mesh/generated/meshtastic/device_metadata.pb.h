/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_MESHTASTIC_MESHTASTIC_DEVICE_METADATA_PB_H_INCLUDED
#define PB_MESHTASTIC_MESHTASTIC_DEVICE_METADATA_PB_H_INCLUDED
#include <pb.h>
#include "./config.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Device metadata response */
typedef struct _DeviceMetadata {
    /* Device firmware version string */
    char firmware_version[18];
    /* Device state version */
    uint32_t device_state_version;
    /* Indicates whether the device can shutdown CPU natively or via power management chip */
    bool canShutdown;
    /* Indicates that the device has native wifi capability */
    bool hasWifi;
    /* Indicates that the device has native bluetooth capability */
    bool hasBluetooth;
    /* Indicates that the device has an ethernet peripheral */
    bool hasEthernet;
    /* Indicates that the device's role in the mesh */
    Config_DeviceConfig_Role role;
    /* Indicates the device's current enabled position flags */
    Config_PositionConfig_PositionFlags position_flags;
} DeviceMetadata;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define DeviceMetadata_init_default   {"", 0, 0, 0, 0, 0, _Config_DeviceConfig_Role_MIN, _Config_PositionConfig_PositionFlags_MIN}
#define DeviceMetadata_init_zero      {"", 0, 0, 0, 0, 0, _Config_DeviceConfig_Role_MIN, _Config_PositionConfig_PositionFlags_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define DeviceMetadata_firmware_version_tag 1
#define DeviceMetadata_device_state_version_tag 2
#define DeviceMetadata_canShutdown_tag 3
#define DeviceMetadata_hasWifi_tag    4
#define DeviceMetadata_hasBluetooth_tag 5
#define DeviceMetadata_hasEthernet_tag 6
#define DeviceMetadata_role_tag       7
#define DeviceMetadata_position_flags_tag 8

/* Struct field encoding specification for nanopb */
#define DeviceMetadata_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   firmware_version,   1) \
X(a, STATIC,   SINGULAR, UINT32,   device_state_version,   2) \
X(a, STATIC,   SINGULAR, BOOL,     canShutdown,       3) \
X(a, STATIC,   SINGULAR, BOOL,     hasWifi,           4) \
X(a, STATIC,   SINGULAR, BOOL,     hasBluetooth,      5) \
X(a, STATIC,   SINGULAR, BOOL,     hasEthernet,       6) \
X(a, STATIC,   SINGULAR, UENUM,    role,              7) \
X(a, STATIC,   SINGULAR, UENUM,    position_flags,    8)
#define DeviceMetadata_CALLBACK NULL
#define DeviceMetadata_DEFAULT NULL

extern const pb_msgdesc_t DeviceMetadata_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define DeviceMetadata_fields &DeviceMetadata_msg

/* Maximum encoded size of messages (where known) */
#define DeviceMetadata_size           38

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
