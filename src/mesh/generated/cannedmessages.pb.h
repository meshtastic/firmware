/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_CANNEDMESSAGES_PB_H_INCLUDED
#define PB_CANNEDMESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Canned message module configuration. */
typedef struct _CannedMessageModuleConfig { 
    /* Predefined messages for canned message module separated by '|' characters. */
    char messages[201];
} CannedMessageModuleConfig;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define CannedMessageModuleConfig_init_default   {""}
#define CannedMessageModuleConfig_init_zero      {""}

/* Field tags (for use in manual encoding/decoding) */
#define CannedMessageModuleConfig_messages_tag   1

/* Struct field encoding specification for nanopb */
#define CannedMessageModuleConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   messages,          1)
#define CannedMessageModuleConfig_CALLBACK NULL
#define CannedMessageModuleConfig_DEFAULT NULL

extern const pb_msgdesc_t CannedMessageModuleConfig_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CannedMessageModuleConfig_fields &CannedMessageModuleConfig_msg

/* Maximum encoded size of messages (where known) */
#define CannedMessageModuleConfig_size           203

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
