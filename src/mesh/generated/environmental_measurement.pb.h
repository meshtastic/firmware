/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_ENVIRONMENTAL_MEASUREMENT_PB_H_INCLUDED
#define PB_ENVIRONMENTAL_MEASUREMENT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _EnvironmentalMeasurement {
    float temperature;
    float relative_humidity;
    float barometric_pressure;
} EnvironmentalMeasurement;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define EnvironmentalMeasurement_init_default    {0, 0, 0}
#define EnvironmentalMeasurement_init_zero       {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define EnvironmentalMeasurement_temperature_tag 1
#define EnvironmentalMeasurement_relative_humidity_tag 2
#define EnvironmentalMeasurement_barometric_pressure_tag 3

/* Struct field encoding specification for nanopb */
#define EnvironmentalMeasurement_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       1) \
X(a, STATIC,   SINGULAR, FLOAT,    relative_humidity,   2) \
X(a, STATIC,   SINGULAR, FLOAT,    barometric_pressure,   3)
#define EnvironmentalMeasurement_CALLBACK NULL
#define EnvironmentalMeasurement_DEFAULT NULL

extern const pb_msgdesc_t EnvironmentalMeasurement_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define EnvironmentalMeasurement_fields &EnvironmentalMeasurement_msg

/* Maximum encoded size of messages (where known) */
#define EnvironmentalMeasurement_size            15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
