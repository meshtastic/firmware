/*

Uses Windows-1251 encoding to map translingual Cyrillic characters to range between (uint8_t)127 and (uint8_t)255
https://en.wikipedia.org/wiki/Windows-1251

Cyrillic characters present to the firmware as UTF8.
A Niche Graphics implementation needs to identify these, and subsitute the appropriate Windows-1251 char value.

*/

#pragma once

const uint8_t FreeSans6pt8bCyrillicBitmaps[] PROGMEM = {
    0xFF, 0xA0, 0xC0, 0xFF, 0xA0, 0xC0, 0xB6, 0x80, 0x24, 0x51, 0xF9, 0x42, 0x9F, 0x92, 0x28, 0x31, 0x75, 0x54, 0x78, 0x79, 0x75,
    0x7C, 0x41, 0x00, 0x01, 0x1C, 0x49, 0x22, 0x50, 0x74, 0x02, 0x60, 0xA4, 0x49, 0x11, 0xC0, 0x21, 0x44, 0x94, 0x62, 0x59, 0xE2,
    0xF4, 0xE0, 0x6A, 0xAA, 0x90, 0x48, 0x92, 0x49, 0x4A, 0x00, 0x5D, 0x40, 0x21, 0x09, 0xF2, 0x10, 0xE0, 0xC0, 0x80, 0x25, 0x25,
    0x24, 0x26, 0xA3, 0x18, 0xC6, 0x31, 0xF0, 0x27, 0x92, 0x49, 0x20, 0x11, 0xB4, 0x41, 0x0C, 0xC6, 0x10, 0xFC, 0x26, 0xA2, 0x13,
    0x04, 0x31, 0xF0, 0x08, 0x61, 0x8A, 0x49, 0x2F, 0xC2, 0x08, 0xFF, 0xE1, 0x4D, 0x84, 0x31, 0xF0, 0x26, 0xE3, 0x0F, 0x46, 0x31,
    0xF0, 0xFF, 0xC4, 0x22, 0x11, 0x08, 0x40, 0x11, 0xA4, 0x51, 0x39, 0x1C, 0x51, 0x78, 0x11, 0xA4, 0x71, 0x45, 0xF0, 0x51, 0x78,
    0xC0, 0x30, 0xC0, 0x36, 0x1F, 0x20, 0xE0, 0x80, 0xF8, 0x3E, 0xC1, 0xC2, 0xE8, 0x00, 0x74, 0x62, 0x11, 0x10, 0x80, 0x20, 0x0F,
    0x06, 0x18, 0x81, 0xA7, 0xD4, 0x93, 0x22, 0x64, 0x4A, 0x7E, 0x60, 0x06, 0x00, 0x3C, 0x00, 0x18, 0x18, 0x1C, 0x24, 0x24, 0x7E,
    0x42, 0x42, 0xC3, 0xFA, 0x38, 0x61, 0xFA, 0x18, 0x61, 0xFC, 0x38, 0x8A, 0x0C, 0x08, 0x10, 0x20, 0xE3, 0x7C, 0xF9, 0x1A, 0x1C,
    0x18, 0x30, 0x60, 0xC2, 0xF8, 0xFE, 0x08, 0x20, 0xFE, 0x08, 0x20, 0xFC, 0xFE, 0x08, 0x20, 0xFA, 0x08, 0x20, 0x80, 0x3C, 0x46,
    0x82, 0x80, 0x8F, 0x81, 0x83, 0xC3, 0x7D, 0x83, 0x06, 0x0C, 0x1F, 0xF0, 0x60, 0xC1, 0x82, 0xFF, 0x80, 0x08, 0x42, 0x10, 0x86,
    0x31, 0x78, 0x87, 0x1A, 0x65, 0x8F, 0x1A, 0x22, 0x42, 0x86, 0x84, 0x21, 0x08, 0x42, 0x10, 0xF8, 0xC3, 0xC3, 0xC3, 0xA5, 0xA5,
    0xA5, 0x99, 0x99, 0x99, 0x83, 0x87, 0x8D, 0x19, 0x32, 0x62, 0xC3, 0x86, 0x1E, 0x11, 0x90, 0x48, 0x1C, 0x0A, 0x05, 0x06, 0xC2,
    0x3E, 0x00, 0xFA, 0x18, 0x61, 0xFE, 0x08, 0x20, 0x80, 0x1E, 0x11, 0x90, 0x48, 0x1C, 0x0A, 0x05, 0x06, 0xC6, 0x3F, 0x00, 0xFD,
    0x0E, 0x0C, 0x1F, 0xD0, 0xA0, 0xC1, 0x82, 0x7A, 0x18, 0x70, 0x78, 0x38, 0x61, 0x7C, 0xFE, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08,
    0x10, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC3, 0x7C, 0xC3, 0x42, 0x42, 0x26, 0x24, 0x24, 0x14, 0x18, 0x18, 0xC4, 0x28, 0xC5,
    0x39, 0xA5, 0x24, 0xA4, 0x52, 0x8C, 0x71, 0x8C, 0x30, 0x80, 0x87, 0x34, 0x8C, 0x30, 0xC4, 0xB3, 0x84, 0xC3, 0x42, 0x26, 0x24,
    0x18, 0x18, 0x08, 0x08, 0x08, 0x7E, 0x0C, 0x10, 0x41, 0x06, 0x08, 0x20, 0xFE, 0xEA, 0xAA, 0xAB, 0x92, 0x24, 0x89, 0x20, 0xED,
    0xB6, 0xDB, 0x6D, 0xF0, 0x46, 0xAA, 0x90, 0xFC, 0x90, 0xFC, 0x4F, 0x98, 0xFC, 0x84, 0x21, 0xF8, 0xC6, 0x31, 0xF0, 0x79, 0x18,
    0x20, 0x45, 0xE0, 0x04, 0x10, 0x5F, 0xC6, 0x18, 0x51, 0x7C, 0xFC, 0x7F, 0x08, 0xF8, 0x29, 0x74, 0x92, 0x40, 0x7D, 0x18, 0x61,
    0x45, 0xF0, 0x52, 0x30, 0x84, 0x21, 0xF8, 0xC6, 0x31, 0x88, 0xDF, 0x80, 0x51, 0x55, 0x56, 0x84, 0x21, 0x2A, 0x72, 0x92, 0x98,
    0xFF, 0x80, 0xFF, 0x99, 0x99, 0x99, 0x99, 0x99, 0xFC, 0x63, 0x18, 0xC4, 0x79, 0x18, 0x71, 0x45, 0xE0, 0xFC, 0x63, 0x18, 0xFA,
    0x10, 0x80, 0x7D, 0x18, 0x61, 0x45, 0xF0, 0x41, 0x04, 0xF2, 0x49, 0x00, 0x79, 0x07, 0x02, 0xCD, 0xE0, 0x4B, 0xA4, 0x93, 0x8C,
    0x63, 0x18, 0xFC, 0xCD, 0x24, 0x94, 0x30, 0xC0, 0x99, 0x59, 0x55, 0x56, 0x66, 0x26, 0x96, 0x66, 0x99, 0xCA, 0x52, 0x63, 0x18,
    0x84, 0x40, 0x78, 0xC4, 0x44, 0x7C, 0x6A, 0xAA, 0xA9, 0xFF, 0xF0, 0xC9, 0x24, 0x4A, 0x49, 0x40, 0xE8, 0xC0, 0xFE, 0x18, 0x61,
    0x86, 0x18, 0x61, 0xFC, 0xFC, 0x08, 0x04, 0x02, 0x01, 0xF0, 0x8C, 0x46, 0x23, 0x11, 0x80, 0xC0, 0xC0, 0x10, 0x8F, 0xE0, 0x82,
    0x08, 0x20, 0x82, 0x08, 0x00, 0x64, 0x0F, 0x88, 0x88, 0x80, 0x3D, 0x0C, 0x2E, 0xF9, 0x04, 0x0F, 0x7C, 0x08, 0x81, 0x10, 0x22,
    0x04, 0x7C, 0x88, 0x51, 0x0A, 0x21, 0x87, 0xC0, 0x84, 0x10, 0x82, 0x10, 0x42, 0x0F, 0xFD, 0x08, 0xA1, 0x0C, 0x23, 0x87, 0xC0,
    0x10, 0x88, 0xE6, 0xB3, 0x8C, 0x28, 0x92, 0x28, 0xC0, 0xFC, 0x08, 0x04, 0x02, 0x01, 0xF0, 0x8C, 0x46, 0x23, 0x11, 0x80, 0x83,
    0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0xFE, 0x20, 0x40, 0x43, 0xC4, 0x1F, 0x45, 0x14, 0x51, 0x44, 0x11, 0x80, 0x78, 0x24, 0x13,
    0xC9, 0x14, 0x8E, 0x7C, 0x88, 0x44, 0x3F, 0xD1, 0x38, 0x8C, 0x78, 0x60, 0x9A, 0xCC, 0xA9, 0x43, 0xC4, 0x1F, 0x45, 0x14, 0x51,
    0x44, 0x8C, 0x63, 0x18, 0xFC, 0x80, 0x24, 0x33, 0x0A, 0x36, 0x45, 0x8E, 0x0C, 0x10, 0x60, 0x80, 0x70, 0x22, 0x95, 0xA8, 0xC4,
    0x23, 0x10, 0x08, 0x42, 0x10, 0x86, 0x31, 0x78, 0x07, 0xF8, 0x20, 0x82, 0x08, 0x20, 0x82, 0x00, 0x28, 0x0F, 0xE0, 0x82, 0x0F,
    0xE0, 0x82, 0x0F, 0xC0, 0x38, 0x8A, 0x0C, 0x0F, 0x90, 0x20, 0xE3, 0x7C, 0x51, 0x55, 0x56, 0xA1, 0x24, 0x92, 0x49, 0x00, 0xFF,
    0x80, 0xDF, 0x80, 0x27, 0xC9, 0x24, 0x8A, 0x28, 0xA2, 0x8B, 0xF8, 0x20, 0x80, 0x28, 0xA0, 0x1E, 0x47, 0xFC, 0x11, 0x78, 0x88,
    0x44, 0x32, 0x59, 0xDA, 0xCD, 0x66, 0x6B, 0x32, 0x89, 0x80, 0x79, 0x1F, 0x30, 0x45, 0xE0, 0x7A, 0x18, 0x70, 0x78, 0x38, 0x61,
    0x7C, 0x79, 0x07, 0x02, 0xCD, 0xE0, 0xB4, 0x24, 0x92, 0x40, 0x18, 0x18, 0x3C, 0x24, 0x24, 0x7E, 0x42, 0x42, 0xC3, 0xFE, 0x08,
    0x20, 0xFE, 0x18, 0x61, 0xFC, 0xFA, 0x38, 0x61, 0xFA, 0x18, 0x61, 0xFC, 0xFE, 0x08, 0x20, 0x82, 0x08, 0x20, 0x80, 0x1F, 0x08,
    0x84, 0x42, 0x21, 0x10, 0x88, 0x44, 0x42, 0xFF, 0xC0, 0x60, 0x20, 0xFE, 0x08, 0x20, 0xFE, 0x08, 0x20, 0xFC, 0x88, 0xA4, 0x9A,
    0x87, 0xC1, 0xC1, 0xF1, 0xAD, 0x92, 0x88, 0x80, 0x7A, 0x18, 0x41, 0x38, 0x18, 0x61, 0x7C, 0x87, 0x0E, 0x2C, 0x59, 0x34, 0x68,
    0xE1, 0xC2, 0x28, 0x22, 0x1C, 0x38, 0xB1, 0x64, 0xD1, 0xA3, 0x87, 0x08, 0x8E, 0x6B, 0x38, 0xC2, 0x89, 0x22, 0x8C, 0x3E, 0x44,
    0x89, 0x12, 0x24, 0x58, 0xA1, 0xC2, 0xC3, 0xC3, 0xC3, 0xA5, 0xA5, 0xA5, 0x99, 0x99, 0x99, 0x83, 0x06, 0x0C, 0x1F, 0xF0, 0x60,
    0xC1, 0x82, 0x3C, 0x46, 0x83, 0x81, 0x81, 0x81, 0x81, 0xC2, 0x7C, 0xFF, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x82, 0xFA, 0x18,
    0x61, 0xFE, 0x08, 0x20, 0x80, 0x38, 0x8A, 0x0C, 0x08, 0x10, 0x20, 0xE3, 0x7C, 0xFE, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10,
    0xC2, 0x8D, 0x91, 0x63, 0x83, 0x04, 0x18, 0x20, 0x08, 0x1E, 0x32, 0xD1, 0x38, 0x8C, 0x4F, 0x2C, 0xFC, 0x08, 0x00, 0x87, 0x34,
    0x8C, 0x30, 0xC4, 0xB3, 0x84, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0xFF, 0x01, 0x01, 0x8E, 0x38, 0xE3, 0x8D, 0xF0,
    0xC3, 0x0C, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xFF, 0x99, 0x4C, 0xA6, 0x53, 0x29, 0x94, 0xCA, 0x65, 0x32, 0xFF,
    0x80, 0x40, 0x20, 0xF0, 0x04, 0x01, 0x00, 0x40, 0x1F, 0x84, 0x21, 0x0C, 0x42, 0x1F, 0x00, 0x81, 0xC0, 0xE0, 0x70, 0x3F, 0xDC,
    0x2E, 0x17, 0x0B, 0xF9, 0x80, 0x82, 0x08, 0x20, 0xFE, 0x18, 0x61, 0xF8, 0x79, 0x8A, 0x18, 0x13, 0xE0, 0x60, 0xC2, 0x7C, 0x87,
    0x26, 0x39, 0x06, 0x41, 0xF0, 0x64, 0x19, 0x06, 0x63, 0x8F, 0x80, 0x7E, 0x18, 0x61, 0x7C, 0xD6, 0x71, 0x84, 0x79, 0x11, 0xD9,
    0xCD, 0xD0, 0x0D, 0xC4, 0x1E, 0x47, 0x1C, 0x51, 0x78, 0xF4, 0xBD, 0x29, 0xF8, 0xF8, 0x88, 0x88, 0x3C, 0x48, 0x91, 0x22, 0x5F,
    0xE0, 0x80, 0x79, 0x1F, 0xF0, 0x45, 0xE0, 0x92, 0x54, 0x38, 0x3C, 0x56, 0x93, 0x78, 0x23, 0x82, 0xCD, 0xE0, 0x9C, 0xEB, 0x5C,
    0xC4, 0x70, 0x27, 0x3A, 0xD7, 0x31, 0x9A, 0xCC, 0xA9, 0x7A, 0x52, 0x94, 0xE4, 0x8F, 0x3D, 0x6D, 0xA6, 0x90, 0x8C, 0x7F, 0x18,
    0xC4, 0x79, 0x1C, 0x71, 0x45, 0xE0, 0xFC, 0x63, 0x18, 0xC4, 0xFC, 0x63, 0x18, 0xFA, 0x10, 0x80, 0x79, 0x1C, 0x30, 0x45, 0xE0,
    0xF9, 0x08, 0x42, 0x10, 0x8A, 0x56, 0xA3, 0x10, 0x8C, 0x40, 0x04, 0x01, 0x07, 0xF9, 0x31, 0xC4, 0x71, 0x14, 0xC5, 0xFE, 0x04,
    0x01, 0x00, 0x40, 0x4B, 0x8C, 0x65, 0xE4, 0x8A, 0x28, 0xA2, 0x8B, 0xF0, 0x40, 0x99, 0x97, 0x11, 0x96, 0x59, 0x65, 0x97, 0xF0,
    0x95, 0x2A, 0x54, 0xA9, 0x5F, 0xC0, 0x80, 0xF0, 0x20, 0x78, 0x91, 0x23, 0xC0, 0x86, 0x1F, 0x63, 0x8F, 0xD0, 0x84, 0x3D, 0x18,
    0xF8, 0xF4, 0xDE, 0x19, 0xF8, 0x9E, 0xA2, 0xE1, 0xA1, 0xA2, 0x9E, 0xFC, 0x7E, 0xD4, 0xC4,
};

const GFXglyph FreeSans6pt8bCyrillicGlyphs[] PROGMEM = {
    {0, 0, 0, 3, 0, 0},        // 0x20 ' '
    {3, 2, 9, 3, 1, -8},       // 0x21 '!'
    {6, 3, 3, 4, 1, -8},       // 0x22 '"'
    {8, 7, 8, 7, 0, -7},       // 0x23 '#'
    {15, 6, 11, 7, 0, -8},     // 0x24 '$'
    {24, 10, 9, 11, 0, -8},    // 0x25 '%'
    {36, 6, 9, 8, 1, -8},      // 0x26 '&'
    {43, 1, 3, 2, 1, -8},      // 0x27 '''
    {44, 2, 10, 4, 1, -7},     // 0x28 '('
    {47, 3, 11, 4, 0, -7},     // 0x29 ')'
    {52, 3, 4, 5, 1, -8},      // 0x2A '*'
    {54, 5, 6, 7, 1, -5},      // 0x2B '+'
    {58, 1, 3, 3, 1, 0},       // 0x2C ','
    {59, 2, 1, 4, 1, -3},      // 0x2D '-'
    {60, 1, 1, 3, 1, 0},       // 0x2E '.'
    {61, 3, 8, 3, 0, -7},      // 0x2F '/'
    {64, 5, 9, 7, 1, -8},      // 0x30 '0'
    {70, 3, 9, 7, 1, -8},      // 0x31 '1'
    {74, 6, 9, 7, 0, -8},      // 0x32 '2'
    {81, 5, 9, 7, 1, -8},      // 0x33 '3'
    {87, 6, 9, 7, 0, -8},      // 0x34 '4'
    {94, 5, 9, 7, 1, -8},      // 0x35 '5'
    {100, 5, 9, 7, 1, -8},     // 0x36 '6'
    {106, 5, 9, 7, 1, -8},     // 0x37 '7'
    {112, 6, 9, 7, 0, -8},     // 0x38 '8'
    {119, 6, 9, 7, 0, -8},     // 0x39 '9'
    {126, 2, 6, 3, 1, -5},     // 0x3A ':'
    {128, 2, 8, 3, 1, -5},     // 0x3B ';'
    {130, 5, 5, 7, 1, -4},     // 0x3C '<'
    {134, 5, 3, 7, 1, -3},     // 0x3D '='
    {136, 5, 5, 7, 1, -4},     // 0x3E '>'
    {140, 5, 9, 7, 1, -8},     // 0x3F '?'
    {146, 11, 11, 12, 0, -8},  // 0x40 '@'
    {162, 8, 9, 8, 0, -8},     // 0x41 'A'
    {171, 6, 9, 8, 1, -8},     // 0x42 'B'
    {178, 7, 9, 9, 1, -8},     // 0x43 'C'
    {186, 7, 9, 9, 1, -8},     // 0x44 'D'
    {194, 6, 9, 8, 1, -8},     // 0x45 'E'
    {201, 6, 9, 7, 1, -8},     // 0x46 'F'
    {208, 8, 9, 9, 1, -8},     // 0x47 'G'
    {217, 7, 9, 9, 1, -8},     // 0x48 'H'
    {225, 1, 9, 3, 1, -8},     // 0x49 'I'
    {227, 5, 9, 6, 0, -8},     // 0x4A 'J'
    {233, 7, 9, 8, 1, -8},     // 0x4B 'K'
    {241, 5, 9, 7, 1, -8},     // 0x4C 'L'
    {247, 8, 9, 10, 1, -8},    // 0x4D 'M'
    {256, 7, 9, 9, 1, -8},     // 0x4E 'N'
    {264, 9, 9, 9, 0, -8},     // 0x4F 'O'
    {275, 6, 9, 8, 1, -8},     // 0x50 'P'
    {282, 9, 9, 9, 0, -8},     // 0x51 'Q'
    {293, 7, 9, 9, 1, -8},     // 0x52 'R'
    {301, 6, 9, 8, 1, -8},     // 0x53 'S'
    {308, 7, 9, 7, 0, -8},     // 0x54 'T'
    {316, 7, 9, 9, 1, -8},     // 0x55 'U'
    {324, 8, 9, 8, 0, -8},     // 0x56 'V'
    {333, 11, 9, 11, 0, -8},   // 0x57 'W'
    {346, 6, 9, 8, 1, -8},     // 0x58 'X'
    {353, 8, 9, 8, 0, -8},     // 0x59 'Y'
    {362, 7, 9, 7, 0, -8},     // 0x5A 'Z'
    {370, 2, 12, 3, 1, -8},    // 0x5B '['
    {373, 3, 9, 3, 0, -8},     // 0x5C '\'
    {377, 3, 12, 3, 0, -8},    // 0x5D ']'
    {382, 4, 5, 6, 1, -8},     // 0x5E '^'
    {385, 6, 1, 7, 0, 2},      // 0x5F '_'
    {386, 2, 2, 4, 1, -8},     // 0x60 '`'
    {387, 5, 6, 7, 1, -5},     // 0x61 'a'
    {391, 5, 9, 7, 1, -8},     // 0x62 'b'
    {397, 6, 6, 6, 0, -5},     // 0x63 'c'
    {402, 6, 9, 7, 0, -8},     // 0x64 'd'
    {409, 5, 6, 7, 1, -5},     // 0x65 'e'
    {413, 3, 9, 3, 0, -8},     // 0x66 'f'
    {417, 6, 9, 7, 0, -5},     // 0x67 'g'
    {424, 5, 9, 7, 1, -8},     // 0x68 'h'
    {430, 1, 9, 3, 1, -8},     // 0x69 'i'
    {432, 2, 12, 3, 0, -8},    // 0x6A 'j'
    {435, 5, 9, 6, 1, -8},     // 0x6B 'k'
    {441, 1, 9, 3, 1, -8},     // 0x6C 'l'
    {443, 8, 6, 10, 1, -5},    // 0x6D 'm'
    {449, 5, 6, 7, 1, -5},     // 0x6E 'n'
    {453, 6, 6, 7, 0, -5},     // 0x6F 'o'
    {458, 5, 9, 7, 1, -5},     // 0x70 'p'
    {464, 6, 9, 7, 0, -5},     // 0x71 'q'
    {471, 3, 6, 4, 1, -5},     // 0x72 'r'
    {474, 6, 6, 6, 0, -5},     // 0x73 's'
    {479, 3, 8, 3, 0, -7},     // 0x74 't'
    {482, 5, 6, 7, 1, -5},     // 0x75 'u'
    {486, 6, 6, 6, 0, -5},     // 0x76 'v'
    {491, 8, 6, 9, 0, -5},     // 0x77 'w'
    {497, 4, 6, 6, 1, -5},     // 0x78 'x'
    {500, 5, 9, 6, 0, -5},     // 0x79 'y'
    {506, 5, 6, 6, 0, -5},     // 0x7A 'z'
    {510, 2, 12, 4, 1, -8},    // 0x7B '{'
    {513, 1, 12, 3, 1, -8},    // 0x7C '|'
    {515, 3, 12, 4, 0, -8},    // 0x7D '}'
    {520, 5, 2, 7, 1, -4},     // 0x7E '~'
    {522, 6, 9, 8, 1, -8},     //
    {529, 9, 11, 9, 0, -8},    //
    {542, 6, 11, 7, 1, -10},   //
    {551, 0, 0, 8, 0, 0},      //
    {551, 4, 9, 5, 1, -8},     //
    {556, 0, 0, 8, 0, 0},      //
    {556, 0, 0, 8, 0, 0},      //
    {556, 0, 0, 8, 0, 0},      //
    {556, 0, 0, 8, 0, 0},      //
    {556, 6, 8, 8, 1, -7},     //
    {562, 0, 0, 8, 0, 0},      //
    {562, 11, 9, 13, 1, -8},   //
    {575, 0, 0, 8, 0, 0},      //
    {575, 11, 9, 12, 1, -8},   //
    {588, 6, 11, 8, 1, -10},   //
    {597, 9, 9, 9, 0, -8},     //
    {608, 7, 11, 9, 1, -8},    //
    {618, 6, 11, 7, 0, -8},    //
    {627, 0, 0, 8, 0, 0},      //
    {627, 0, 0, 8, 0, 0},      //
    {627, 0, 0, 8, 0, 0},      //
    {627, 0, 0, 8, 0, 0},      //
    {627, 0, 0, 8, 0, 0},      //
    {627, 0, 0, 8, 0, 0},      //
    {627, 0, 0, 8, 0, 0},      //
    {627, 0, 0, 8, 0, 0},      //
    {627, 0, 0, 8, 0, 0},      //
    {627, 9, 6, 10, 0, -5},    //
    {634, 0, 0, 8, 0, 0},      //
    {634, 9, 6, 10, 1, -5},    //
    {641, 4, 8, 6, 1, -7},     //
    {645, 6, 9, 7, 0, -8},     //
    {652, 5, 7, 7, 1, -5},     //
    {657, 0, 0, 8, 0, 0},      //
    {657, 7, 11, 7, 0, -10},   //
    {667, 5, 11, 6, 0, -7},    //
    {674, 5, 9, 6, 0, -8},     //
    {680, 0, 0, 8, 0, 0},      //
    {680, 6, 10, 7, 1, -9},    //
    {688, 0, 0, 8, 0, 0},      //
    {688, 0, 0, 8, 0, 0},      //
    {688, 6, 11, 8, 1, -10},   //
    {697, 7, 9, 9, 1, -8},     //
    {705, 0, 0, 8, 0, 0},      //
    {705, 0, 0, 8, 0, 0},      //
    {705, 2, 12, 3, 0, -8},    //
    {708, 0, 0, 8, 0, 0},      //
    {708, 0, 0, 8, 0, 0},      //
    {708, 3, 11, 3, 0, -10},   //
    {713, 0, 0, 8, 0, 0},      //
    {713, 0, 0, 8, 0, 0},      //
    {713, 1, 9, 3, 1, -8},     //
    {715, 1, 9, 3, 1, -8},     //
    {717, 3, 8, 5, 1, -7},     //
    {720, 6, 9, 7, 1, -5},     //
    {727, 0, 0, 8, 0, 0},      //
    {727, 0, 0, 8, 0, 0},      //
    {727, 6, 9, 7, 0, -8},     //
    {734, 9, 9, 11, 1, -8},    //
    {745, 6, 6, 6, 0, -5},     //
    {750, 0, 0, 8, 0, 0},      //
    {750, 0, 0, 8, 0, 0},      //
    {750, 6, 9, 8, 1, -8},     //
    {757, 6, 6, 6, 0, -5},     //
    {762, 3, 9, 3, 0, -8},     //
    {766, 8, 9, 8, 0, -8},     //
    {775, 6, 9, 8, 1, -8},     //
    {782, 6, 9, 8, 1, -8},     //
    {789, 6, 9, 7, 1, -8},     //
    {796, 9, 11, 10, 0, -8},   //
    {809, 6, 9, 8, 1, -8},     //
    {816, 9, 9, 11, 1, -8},    //
    {827, 6, 9, 8, 1, -8},     //
    {834, 7, 9, 9, 1, -8},     //
    {842, 7, 11, 9, 1, -10},   //
    {852, 6, 9, 8, 1, -8},     //
    {859, 7, 9, 8, 0, -8},     //
    {867, 8, 9, 10, 1, -8},    //
    {876, 7, 9, 9, 1, -8},     //
    {884, 8, 9, 10, 1, -8},    //
    {893, 7, 9, 9, 1, -8},     //
    {901, 6, 9, 8, 1, -8},     //
    {908, 7, 9, 9, 1, -8},     //
    {916, 7, 9, 7, 0, -8},     //
    {924, 7, 9, 7, 0, -8},     //
    {932, 9, 9, 10, 1, -8},    //
    {943, 6, 9, 8, 1, -8},     //
    {950, 8, 11, 9, 1, -8},    //
    {961, 6, 9, 8, 1, -8},     //
    {968, 8, 9, 10, 1, -8},    //
    {977, 9, 11, 10, 1, -8},   //
    {990, 10, 9, 10, 0, -8},   //
    {1002, 9, 9, 10, 1, -8},   //
    {1013, 6, 9, 8, 1, -8},    //
    {1020, 7, 9, 9, 1, -8},    //
    {1028, 10, 9, 12, 1, -8},  //
    {1040, 6, 9, 8, 1, -8},    //
    {1047, 6, 6, 7, 0, -5},    //
    {1052, 6, 9, 7, 0, -8},    //
    {1059, 5, 6, 6, 1, -5},    //
    {1063, 4, 6, 5, 1, -5},    //
    {1066, 7, 7, 7, 0, -5},    //
    {1073, 6, 6, 7, 0, -5},    //
    {1078, 8, 6, 9, 1, -5},    //
    {1084, 6, 6, 6, 0, -5},    //
    {1089, 5, 6, 7, 1, -5},    //
    {1093, 5, 8, 7, 1, -7},    //
    {1098, 4, 6, 6, 1, -5},    //
    {1101, 5, 6, 6, 0, -5},    //
    {1105, 6, 6, 7, 1, -5},    //
    {1110, 5, 6, 7, 1, -5},    //
    {1114, 6, 6, 7, 0, -5},    //
    {1119, 5, 6, 7, 1, -5},    //
    {1123, 5, 9, 7, 1, -5},    //
    {1129, 6, 6, 6, 0, -5},    //
    {1134, 5, 6, 5, 0, -5},    //
    {1138, 5, 9, 6, 0, -5},    //
    {1144, 10, 11, 10, 0, -7}, //
    {1158, 5, 6, 6, 0, -5},    //
    {1162, 6, 7, 7, 1, -5},    //
    {1168, 4, 6, 6, 1, -5},    //
    {1171, 6, 6, 8, 1, -5},    //
    {1176, 7, 7, 9, 1, -5},    //
    {1183, 7, 6, 8, 0, -5},    //
    {1189, 6, 6, 8, 1, -5},    //
    {1194, 5, 6, 6, 1, -5},    //
    {1198, 5, 6, 6, 1, -5},    //
    {1202, 8, 6, 9, 1, -5},    //
    {1208, 5, 6, 7, 1, -5}     //
};

const GFXfont FreeSans6pt8bCyrillic PROGMEM = {(uint8_t *)FreeSans6pt8bCyrillicBitmaps, (GFXglyph *)FreeSans6pt8bCyrillicGlyphs,
                                               0x20, 0xFF, 16};
